<launch>
    <arg name="lidar_port" default="/dev/ttyTHS0"/>
    <arg name="use_gui" default="FALSE"/>
    <arg name="use_sim_time" default="false"/>
    <arg name="use_lidar" default="TRUE"/>
    <arg name="camera_model" default="OAK-D-LITE"/>
    <!-- <arg name="base_frame" default="base_link" /> -->

    <!-- Foxglove Bridge -->
    <!-- https://index.ros.org/p/foxglove_bridge/ -->
    <include file="$(find-pkg-share foxglove_bridge)/launch/foxglove_bridge_launch.xml">
        <arg name="port" value="8765"/>
        <arg name="asset_uri_allowlist" value="['^package://.*\\.(?:dae|fbx|glb|gltf|jpeg|jpg|mtl|obj|png|stl|tif|tiff|urdf|webp|xacro)$']"/>
        <arg name="max_qos_depth" value="100"/>
        <arg name="send_buffer_limit" value="10000000"/>
    </include>

    <node pkg="joint_state_publisher" exec="joint_state_publisher" name="joint_state_publisher" output="screen">
        <param name="use_gui" value="$(var use_gui)"/>
    </node>
    <!-- <node pkg="joint_state_publisher_gui" exec="joint_state_publisher_gui" name="joint_state_publisher_gui"/> -->

    <!-- LIDAR -->
    <include if="$(var use_lidar)" file="$(find-pkg-share deepdrive_bringup)/launch/lidar.launch.xml" />
    
    <!-- <node pkg="tf2_ros" exec="static_transform_publisher" name="base_link_to_laser" args="0 0 0 3.14159 0 0 base_link laser" output="screen" /> -->

    <!-- Camera -->
    <include file="$(find-pkg-share deepdrive_camera)/launch/camera.launch.xml" />
    <!-- <node pkg="tf2_ros" exec="static_transform_publisher" name="base_footprint_oak" args="0 0 0 0 0 0 camera_link oak" output="screen" /> -->
    <!-- <node pkg="tf2_ros" exec="static_transform_publisher" name="oak_base" args="0 0 0 0 0 0 oak-d-base-frame oak" output="screen" /> -->
    <!-- <node pkg="tf2_ros" exec="static_transform_publisher" name="oak_imu" args="0 0 0 0 0 0 base_link oak-d-base-frame" output="screen" /> -->
    <!-- <node pkg="tf2_ros" exec="static_transform_publisher" name="imu_link_odom" args="0 0 0 0 0 0 imu_link odom" output="screen" /> -->
    <!-- <node pkg="tf2_ros" exec="static_transform_publisher" name="imu_link_oak_base_frame" args="0 0 0 0 0 0 imu_link oak-d-base-frame" output="screen" /> -->
    <!-- <node pkg="tf2_ros" exec="static_transform_publisher" name="oak_oak_model_origin" args="0 0 0 0 0 0 oak oak_model_origin" output="screen" /> -->
    <!-- https://github.com/luxonis/depthai-ros-examples/blob/humble/depthai_cliff_detection/launch/cliff_detection.launch.py -->

    <!-- Odometry / localization -->
    <!-- <include file="$(find-pkg-share deepdrive_bringup)/launch/localization.launch.py" /> -->

    <!-- Motor Controller -->
    <!-- <node pkg="deepdrive_hardware" exec="motor_controller" name="motor_controller" output="screen" /> -->

    <!-- Robot state publisher -->
    <!-- <include file="$(find-pkg-share deepdrive_bringup)/launch/robot_state_publisher.launch.py" /> -->

    <include file="$(find-pkg-share deepdrive_bringup)/launch/launch_control.launch.py" />

    <!-- <include file="$(find-pkg-share deepdrive_nav2_bringup)/launch/localization_launch.xml">
        <arg name="use_sim_time" value="$(var use_sim_time)"/>
        <arg name="map" value="$(find-pkg-share deepdrive_nav2_bringup)/maps/test.yml"/>
    </include> -->
</launch>
