# Borrowed from https://github.com/sskorol/ros2-humble-docker-dev-template

FROM osrf/ros:humble-desktop-full

ARG ROS_DISTRO=humble

# TODO: Cleanup. i.e. nano, install vim
# TODO: Learn tmuxinator
# Install git, supervisor, VNC, & X11 packages
RUN apt-get update && \
    apt-get install -y \
        cmake \
        curl \
        gazebo \
        libglu1-mesa-dev \
        vim \
        python3-pip \
        python3-pydantic \
        ros-${ROS_DISTRO}-gazebo-ros \
        ros-${ROS_DISTRO}-gazebo-ros-pkgs \
        ros-${ROS_DISTRO}-joint-state-publisher \
        ros-${ROS_DISTRO}-robot-localization \
        ros-${ROS_DISTRO}-plotjuggler-ros \
        ros-${ROS_DISTRO}-robot-state-publisher \
        ros-${ROS_DISTRO}-ros2bag \
        ros-${ROS_DISTRO}-rosbag2-storage-default-plugins \
        ros-${ROS_DISTRO}-rqt-tf-tree \
        ros-${ROS_DISTRO}-rmw-fastrtps-cpp \
        ros-${ROS_DISTRO}-rmw-cyclonedds-cpp \
        ros-${ROS_DISTRO}-slam-toolbox \
        ros-${ROS_DISTRO}-turtlebot3 \
        ros-${ROS_DISTRO}-turtlebot3-msgs \
        ros-${ROS_DISTRO}-twist-mux \
        ros-${ROS_DISTRO}-usb-cam \
        ros-${ROS_DISTRO}-xacro \
        ros-${ROS_DISTRO}-navigation2 \
        ros-${ROS_DISTRO}-nav2-bringup \
        ros-${ROS_DISTRO}-foxglove-bridge \
        ros-${ROS_DISTRO}-turtlebot3-gazebo \
        ros-${ROS_DISTRO}-depthai-ros-driver \
        ros-${ROS_DISTRO}-hls-lfcd-lds-driver \
        ros-${ROS_DISTRO}-rqt* \
        ros-${ROS_DISTRO}-joint-state-publisher-gui \
        ros-${ROS_DISTRO}-ros2-control ros-${ROS_DISTRO}-ros2-controllers ros-${ROS_DISTRO}-gazebo-ros2-control \
        apt install joystick jstest-gtk evtest \
        x11-apps \
        xtl-dev \
        ruby-dev \
        rviz \
        tmux \
        wget \
        xorg-dev \
        zsh && \
    rm -rf /var/lib/apt/lists/

RUN pip3 install setuptools==58.2.0

RUN wget https://github.com/openrr/urdf-viz/releases/download/v0.44.0/urdf-viz-x86_64-unknown-linux-gnu.tar.gz && \
    tar -xvzf urdf-viz-x86_64-unknown-linux-gnu.tar.gz -C /usr/local/bin/ && \
    chmod +x /usr/local/bin/urdf-viz && \
    rm -f urdf-viz-x86_64-unknown-linux-gnu.tar.gz

RUN sh -c "$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/v1.1.2/zsh-in-docker.sh)" -- \
    -p git \
    -p https://github.com/zsh-users/zsh-autosuggestions \
    -p https://github.com/zsh-users/zsh-completions

RUN gem install tmuxinator && \
    wget https://raw.githubusercontent.com/tmuxinator/tmuxinator/master/completion/tmuxinator.zsh -O /usr/local/share/zsh/site-functions/_tmuxinator

RUN apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*

ENV ROS_ROOT=/opt/ros/${ROS_DISTRO} \
    ROS2_WS=/ros_ws \
    ROS_PACKAGE=deepdrive \
    RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

RUN echo "source /root/.ros2" >> /root/.bashrc
RUN echo "source /root/.ros2" >> /root/.zshrc
RUN echo "export DISABLE_AUTO_TITLE=true" >> /root/.ros2
RUN echo 'LC_NUMERIC="en_US.UTF-8"' >> /root/.ros2
RUN echo "source $ROS_ROOT/install/setup.sh" >> /root/.ros2
RUN echo "source $ROS2_WS/install/setup.sh" >> /root/.ros2
RUN echo "source /usr/share/gazebo/setup.sh" >> /root/.ros2

RUN echo 'alias rosdi="rosdep install --from-paths src --ignore-src --rosdistro=${ROS_DISTRO} -y"' >> /root/.ros2
RUN echo 'alias cbuild="colcon build --symlink-install"' >> /root/.ros2
RUN echo 'alias ssetup="source $ROS2_WS/install/setup.sh"' >> /root/.ros2
RUN echo 'alias cyclone="export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp"' >> /root/.ros2
RUN echo 'alias fastdds="export RMW_IMPLEMENTATION=rmw_fastrtps_cpp"' >> /root/.ros2
RUN echo 'export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp' >> /root/.ros2

# RUN echo "autoload -U bashcompinit" >> /root/.ros2
# RUN echo "bashcompinit" >> /root/.ros2
RUN echo 'eval "$(register-python-argcomplete3 ros2)"' >> /root/.ros2
RUN echo 'eval "$(register-python-argcomplete3 colcon)"' >> /root/.ros2

COPY .session.yml /root/.session.yml
COPY .tmux.conf /root/.tmux.conf

CMD [ "tmuxinator", "start", "-p", "/root/.session.yml" ]

# ----------------------------------------------------------------------------

# Install JetsonGPIO
WORKDIR /usr/src
RUN git clone https://github.com/pjueon/JetsonGPIO.git && \
    cd JetsonGPIO && \
    mkdir build && \
    cd build && \
    cmake .. -DCMAKE_INSTALL_PREFIX=./install -DBUILD_EXAMPLES=ON -DJETSON_GPIO_POST_INSTALL=OFF && \
    cmake --build . --target install


# Add ROS2 code
WORKDIR $ROS2_WS

# COPY src/deepdrive_hardware/requirements.txt src/deepdrive_hardware/requirements.txt
# RUN pip3 install -r src/deepdrive_hardware/requirements.txt

# COPY src/deepdrive_vision/requirements.txt src/deepdrive_vision/requirements.txt
# RUN pip3 install -r src/deepdrive_vision/requirements.txt

VOLUME /tmp
ENV GAZEBO_MODEL_PATH=$ROS2_WS/src/:$GAZEBO_MODEL_PATH
ENV DEEPDRIVE_MODEL=deepdrive

# CMD [ "bash" ]

COPY src ./src/


RUN bash -c "source $ROS_ROOT/setup.bash && colcon build --symlink-install"
# RUN bash -c "source $ROS2_WS/install/setup.bash && colcon build --symlink-install"

# RUN bash /opt/ros/humble/setup_ws.sh libgazebo_ros_diff_drive
# libgazebo_ros_imu_sensor.so
# libgazebo_ros_ray_sensor.so
# libgazebo_ros_diff_drive.so
# libgazebo_ros_camera.so

# gazebo_plugins